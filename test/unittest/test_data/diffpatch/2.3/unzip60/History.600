UnZip, version 6.00, 20 April 2009

Features added (or removed):

6.00a ():
 - Many changes by Myles

6.00b (12 Nov 04):
 - Added dll changes from Mike White.  [Mike White (MW), Ed Gordon (EG)]
 - Added Unix Large File Support but must be enabled manually.  [EG]
 - Humble beginnings of adding configure script to Unix port to
    autoconfigure large file support.  [EG]
 - VMS changes, including large file support, better handling of
   -V and new -VV options, revised build procedures, and
   documentation updates.  [Steven Schweda (SMS)]
 - file_size added to process.c to handle files sizes larger
   than 2 GiB more cleanly when no large file support.  [SMS]
 - Large file debugging on Unix and VMS.  [SMS, EG]
 - Split w32i64.h with large file includes for dll [EG]

6.00c (1 Feb 05):
 - Various Amiga and Win32 changes (see files).  [Paul Kienitz (PK)]
 - Add NOSHARE compile option for VMS.  [SMS]
 - Updates to windll (list.c, structs.h, uzexampl.c, uzexampl.h, windll.aps,
   windll.c, windll.h, windll.rc, windll.txt, sfxwiz.c) to add VB support
   for Zip64 to dll [MW]

6.00c (14 Feb 05):
 - Added ODS5 extended file name support for VMS.  (Eight-bit-only, no
   Unicode.)  Zip name character "?" is mapped to VMS name character
   "/".  ODS2 file names are now explicitly upper-case. [SMC]
 - New VMS option, -2 (/ODS2), forces ODS2-compatible file names even
   when the destination file system is ODS5. [SMC]
 - New VMS option, -Y (/DOT_VERSION), causes archived file name endings
   of ".nnn" (where "nnn" is a decimal number) to be treated as if they
   were VMS version numbers (";nnn").  Example: "a.b.3" -> "a.b;3". [SMC]

6.00c8 (08 May 05):
 - Added optional BZIP2 support, using the free BZIP2 library. Enabled
    by defining the compile time option USE_BZIP2. [Johnny Lee]
 - Revised optional ZLIB support to use the new zlib 1.2.x callback interface
    when available (significant performance gain, now faster than UnZip's
    built-in decompression code) [Christian Spieler]
 - Added interface into zlib's unsupported "inflate9" callback code (a contri-
    buted extension in zlib 1.2.x), for extracting Deflate64 entries. Enabled
    by defining the compile time option HAVE_ZL_INFLAT64. [Christian Spieler]
 - windll: added separate entry point Wiz_SingleEntryUnzipList for VB support,
    changed Wiz_SingleEntryUnzip back to 5.x version [Christian Spieler]

6.00c9 (15 May 05):
 - NO feature changes.

6.00c10 (21 May 05):
 - WinCE port: Adapted PocketUnzip to UnZip6 code and enabled Zip64 support
    for the WIN32 (non-WinCE) targets. [Chr. Spieler]

6.00c11 (23 May 05):
 - NO feature changes.

6.00c12 (15 Aug 05):
 - windll/csharp: new example project for .NET framework 1.1, written in C#.
    (currently unsupported by the Info-ZIP group) [Adrian Maull]
 - MSDOS port: added warning message when used in an (32/64-bit) Windows
    virtual MSDOS process; currently only shown when an error or warning
    occured.  [Johnny Lee, Chr. Spieler]

6.00c13 (02 Oct 05), 6.00c14 (15 Nov 05), 6.00c15(17 Nov 05):
 - NO feature changes.

6.00c (19 Nov 05):
 - NO feature changes.

6.00d01 (04 Mar 07):
 - unix/unix.c: when extracting directory entries, keep a SGID attribute
    inherited from the parent dir (to allow content created in these new
    directories to inherit the parent's GID), unless the directory entry was
    created on UNIX, and UnZip was requested to restore UID/GID or SUID/SGID.
    [Matthew Seitz, Chr. Spieler]
 - process.c, modified info message handling for timestamping operation mode
    to be more consistent with message handling of other operations: suppress
    summary message only when qflag > 1 in process_zipfiles(); added time-stamp
    success message to do_seekable() in non-quiet mode; moved message strings
    to Far string constants.  [Steven M. Schweda, Chr. Spieler]
 - process.c - process_zipfiles(): suppress the "cannot find any wildcard
     match ..." warning message for (qflag >= 3).  [Chr. Spieler]
 - vms/vms.c: added support for delayed restoration of directory attributes
     [Steven M. Schweda]
 - vms/vms.c - return_VMS(): implemented official HP-assigned facility code
    in the calculation of UnZip's (non-success) VMS exit status codes.
    [Steven M. Schweda]
 - vms/vms.c, vms/cmdline.c vms/unz_cli.cld, unzip.c, unzip.h: added "-S"
    option to change output record format into Stream-LF for text files when
    extracted in "convert text-files" mode.  [Steven M. Schweda]
 - unzpriv.h, extract.c, unix/unix.c, atari/atari.c, atheos/atheos.c,
    beos/beos.c: added separate pInfo flag to record symlink entries, moved
    symlink detection code into mapattr(), added VMS to the list of hosts known
    to support symbolic links.  [Steven M. Schweda, Christian Spieler]
 - VMS: added support to extract "symlink" entries as symbolic links (requires
    up-to-date version of OpenVMS).  [Steven M. Schweda, Chr. Spieler]
 - unzip.1: added description of new VMS-specific "-S" option. [Chr. Spieler]
 - unzip_cli.help, unzip_def.rnh: updated exit codes documentation, added new
    option (-S resp. /TEXT=STMLF).  [Steven M. Schweda, Chr. Spieler]
 - unzip_cli.help, unzip_def.rnh: completed resp. added description of new
    VMS-specific options (-Y, -2).  [Chr. Spieler]
 - process.c: added preliminary (alpha-state) support for reading of Unicode
    Path extra field that now sets globals unipath_filename and
    unipath_escapedfilename (not yet functional).  [EG]

6.00d02 (08 Mar 07), 6.00d03 (10 Mar 07), 6.00d04 (11 Mar 07):
 - NO feature changes.

6.00d05 (31 Mar 07):
 - win32/vc6: added VC6 project files for compiling UnZip with support for
    bzip2 decompression.  [Chr. Spieler]
 - INSTALL, unix/Makefile, unix/configure: support compiling of UnZip with
    integrated bzip2 decompression capability, added check for presence of
    bzip2 library sources to configure script, updated bzip2-related
    documentation in INSTALL.  [Chr. Spieler]

6.00d06 (02 Dec 07):
 - VMS: added support for displaying UnZip exit code error messages through
    the VMS built-in message facility; new vms/UNZIP_MSG.MSG message string
    source, modified vms/descrip.mms makefile.  [Steven M. Schweda]
 - UNIX: added new "-^" command line option that switches off the control
    character filter for extracted filenames.  [Chr. Spieler]
 - UNIX: added support for restoring attributes and UID/GID for symbolic
    links when appropiate OS support is provided.  [Chr. Spieler]

6.00d07 (26 Dec 07):
 - New "-D" option which allows skipping of timestamp restoration for extracted
    directory entry or for all files ("-DD").  [Chr. Spieler]
 - windll: added support for new -D (-DD) option to dll interface, updated
    the documentation.  [Chr. Spieler]

6.00d08 (29 Dec 07):
 - On VMS, the default is now to not restore directory timestamps (consistent
    with BACKUP); "-D" skips all timestamp restorations, "--D" enables
    timestamp restoration for all entries.  [Chr. Spieler, Steven M. Schweda]

6.00d09 (06 Jan 08):
 - NO feature changes.

6.00d10 (10 Feb 08):
 - partial integration of Ed Gordon's UNICODE_SUPPORT code (W9x-ANSI mode only
    for now) seems to be finished.  [Ed Gordon, C. Spieler]
 - zipinfo.c: added support for "UTF-8 path" extra field display to zi_long().
    [Chr. Spieler]

6.00d11 (16 Feb 08):
 - ATheOS, BeOS, Tandem, Unix: experimental extension of "Ux" extra field to
    allow restoration of 32-bit UID & GID values (affected generic sources:
    unzpriv.h and process.c).  [Chr. Spieler]

6.00d (17 Feb 08):
 - NO feature changes.

6.00e01 (21 Feb 08):
 - NO feature changes.

6.00e02 (08 Mar 08):
 - ATheOS, BeOS, Tandem, Unix: removed experimental 32-bit extension of "Ux"
    extra field (affected generic sources: process.c).  [Chr. Spieler]

6.00e03 (29 Mar 08):
 - general (ebcdic.h, process.c, unpriv.h): modified infrastructure to make
    OEM<-->ISO translation configurable at runtime.  [Chr. Spieler]
 - MSDOS (doscfg.h, msdos.c): OEM<-->ISO configured at runtime, depending on
    system codepage (enabled for 437, 850, 858; disabled for 932, 936, 949,
    950, 874, 1258; currently also disabled for all other OEM codepages because
    of missing translation tables).  [Chr. Spieler]

6.00e04 (27 Apr 08):
 - NO feature changes.

6.00e05 (09 Sep 08):
 - unzip.c: added framework for verbose multi-page online help, called by
    option "-hh".  [Ed Gordon]
 - process.c, unzpriv.h, unix/unix.c: added support for new IZUNIX3 extra field
    providing 32-bit UID/GID data.  [Ed Gordon, Chr. Spieler]
 - unzip.c - uz_opts(): do not exit immediately after recognizing help screen
    request; this allows to specify the pager option after the explicit help
    request.  [Chr. Spieler]

6.00e06 (13 Sep 08):
 - NO feature changes.

6.00e (04 Jan 09):
 - unzip.h: enable -B option for Unix, OS/2, and Win32.  [EG, Chr. Spieler]

6.00f (11 Jan 09):
 - NO feature changes.

6.00g01 (08 Jan 09), 6.00g02 (25 Jan 09), 6.00g03 (10 Feb 09),
6.00g04 (16 Feb 09), 6.00g (28 Feb 09),
6.00h01 (09 Mar 09), 6.00h02 (16 Apr 09), 6.00h03 (17 Apr 09),
6.00 (20 Apr 09):
 - NO feature changes.

Bugs fixed:

6.00b (12 Nov 04):
 - Output bug fixes to account for sizes > 2 GiB and < 4 GiB.  [EG]
 - Bug fixes in ZipInfo.  [EG]
 - Reverted unix.c to an older version to make
    calls to defer_dir_attribs compatible.  Also needed to rework
    win32.c to make compatible.  Probably broke NT but haven't tested.
    Need to trace out and fix.  [EG]

6.00c (1 Feb 05):
 - Various bug fixes (see files gbloffs.c, process.c, unzpriv.h, amiga/amiga.h,
    amiga/filedate.c, amiga/flate.a, amiga/makefile.azt, and win32/w32cfg.h).
    [PK]
 - Some type changes in globals.h.  [SMS]

6.00c (14 Feb 05):
 - Disambiguated some identical VMS error messages. [SMC]

6.00c8 (08 May 05):
 - extract.c, unzip.c, unzpriv.h: Some tweaks and corrections to the optional
    BZIP2 support [Christian Spieler]
 - VMS, cmdline.c unz_cli.cld: fixed the completely broken addition of
    the /ODS2 and /DOT_VERSION options [Christian Spieler]
 - Merged in all additions and fixes of the UnZip 5.5x code tree from
    UnZip 5.50i up to UnZip 5.52 release.  Removed History.5?? files.
    Removed all History.600 entries that have been covered by fixes from
    the UnZip 5.5x code.
    For detailed ChangeLog see History.550, History.551, and History.552,
    as found in unzip552.zip source distribution and the UnZipHist.zip
    ChangeLog archive.  [Christian Spieler]
 - crypt.[ch]: updated to 2.10 (synchronized with zip 2.31) [Christian Spieler]
 - envargs.c: do not declare getenv() for "modern" compilers [Cosmin Truta]
 - extract.c: better echo message for CR or LF at overwrite prompt [Cosmin?]
 - fileio.c: added specific message for SIGILL in handler()  [Chr. Spieler]
 - process.c: fixed code of optional USE_STRM_INPUT variant [Chr. Spieler]
 - VMS, vms.c: requires "-vv" instead of only "-v" to enable VMS diagnostic
    output (enable DIAG_FLAG for vflag >= 3, only; DIAG output is not available
    for the unzip modi "extract to disk" and "zipinfo") [Christian Spieler]
 - VMS cli interface: added (undocumented) option modified /FULL=DIAGNOSTICS to
    control "-vv" diagnostic messages [Steven M Schweda, Christian Spieler]
 - WIN32/MSDOS (maybe others): fixed abort exception handling for CTRL-BREAK
    [Christian Spieler]
 - revised ecrec64 search logic: ecrec64 need not be present when one of
    the ecrec fields is filled with all 1's.  [Christian Spieler]
 - added user-defined types for 8-byte and 4-byte Zip archive (unsigned)
    quantities [Christian Spieler]
 - MSDOS 32-bit port revitalized [Christian Spieler]
 - windll: changed interface definition to be independent of compile/feature
    configuration [Christian Spieler]
 - man/unzip.1: Typo corrections [anonymous DEBIAN contribution, Santiago Vila]
 - man/unzip.1: removed duplicated quotes from VMS example in environment
    variable section [Steven M. Schweda]

6.00c9 (15 May 05):
 - zipinfo.c, list.c: fix the structure check for correct end-of-central dir
    to be aware of Zip64 extensions [Christian Spieler]
 - windll, sfxgui: synchronize function definitions with changed windll
    interface [Mike White]
 - extract.c, fileio.c, process.c: fixed USE_STRM_INPUT variant of file
    position seeking [Christian Spieler]
 - process.c - file_size(): changed scope into static; added non-USE_STRM_INPUT
    variant that uses zlseek instead of zfseeko and zftello; do not include in
    SFX stub; do not compile function definition when not used [Chr. Spieler]
 - unzpriv.h: revised and cleaned up setup definitions for zstat, zfstat and
    other 64-bit configuration macros [Christian Spieler]
 - win32/w32cfg.h: revised automatic ZIP64 support enabling logic and compiler-
    specific configuration; turned off ZIP64 support for lcc and BorlandC
    because of missing LARGE_FILE support; verified LARGE_FILE support for
    Watcom C and MinGW [Chr. Spieler]
 - win32/win32.c: fixed type specification in zstat_win32() [Chr. Spieler]
 - win32/win32i64.c: do not include seek replacement functions when not needed
    [Christian Spieler]
 - zipinfo.c: adapted verbose printouts to longer number printings of Zip64-
    enabled UnZip; fixed extra-space detection in zi_long() by moving the
    extra-field read in front of the offset comparison [Christian Spieler]

6.00c10 (21 May 05):
 - zipinfo.c - zi_long(): fixed expression for detecting 64-bit local entry
    offset [Chr. Spieler]
 - process.c - find_ecrec64(): added type-casts to shut up conversion warnings,
    removed code that clobbered the ecrec signature "pseudo-constant" by
    overwriting it with the ecrec64 signature (this bug broke the reentrancy
    of the dll code) [Chr. Spieler]
 - win32/win32.c, unzpriv.h: adapted SetFileSize for 64-bit offsets[C. Spieler]
 - extract.c, fileio.c, process.c: removed unneeded (FILE *) type-casts in
    calls to zfseeko() and zftello() [Chr. Spieler]
 - extract.c, list.c, zipinfo.c, unzpriv.h: use symbolic constants for the
    16-bit and 64-bit masks in the checks for zip entry count consistency
    [Steven M. Schweda, Chr. Spieler]
 - process.c: reorganized the extended Zip filesize-checking code (for > 2GB
    detection) by moving it behind the open_infile () call and using the
    already opened global zipfile handle [Steven M. Schweda, Chr. Spieler]
 - fileio.c: allow output redirection to memory when ZIP64_SUPPORT is enabled
    [Chr. Spieler]
 - windll: synchronized uzexampl.c and uzexampl.h with current windll interface
    declarations [Chr. Spieler]

6.00c11 (23 May 05):
 - process.c: fixed bugs in last filesize-checking revision (added missing
    semi-colon, synchronized file_size() call with its prototype declaration
    [Steven M. Schweda, Chr. Spieler]

6.00c12 (15 Aug 05):
 - VMS port: updated the dependency build routines (*.mms, *.com) and the VMS
    install documentation (INSTALL) [Steven M. Schweda]
 - api.c - redirect_outfile(): initialize check_conversion variable in the
    non-textmode case [Chr. Spieler]
 - process.c, extract.c: moved the crctab initialization and check of the
    extraction root dir from do_seekable() further down the call tree into
    extract_or_test_files() [Chr. Spieler]
 - extract.c - extract_or_test_entrylist(): moved central-vs-local consistency
    checks behind the local Zip64-e.f. code [Chr. Spieler]
 - fileio.c - do_string() bugfix: do not call getZip64Data() when previous
    allocation of extra field buffer has failed [Chr. Spieler]
 - inflate.c - inflate_dynamic(): free table-decoding huft-tree when exiting
    prematurely from the literal/distance tree data reading because of invalid
    compressed data [Rudolf Lechleitner, Chr. Spieler]
 - unzip.c - uz_opts(): local variable "error" should only take boolean values,
    no PK error codes (cosmetic correction) [Chr. Spieler]
 - vms/vms.c, process.c: modified handling of VMS do_wild() lookup errors to
    give more helpful messages to the end user [Steven M. Schweda]
 - unix/zipgrep: fixed security hole by handling shell metacharacters like '|'
    and '&' properly when they occurred in input file names [Greg Roelofs]
 - match.c: copied and adapted optimization for "*fixedstring" patterns from
    the Zip code into recmatch(); provided two local helper functions isshexp()
    and namecmp() for this optimization [Johnny Lee, Chr. Spieler]
 - Where: used the newer version from UnZip 5.52 [Chr. Spieler]

6.00c13 (02 Oct 05):
 - AOS/VS, Atari, AtheOS, BeOS, UNIX: fixed symlink code by avoiding fclose()
    on NULL handle in extract.c [Dan Yefimov]
 - AOS/VS, Atari, AtheOS, BeOS, UNIX (and unzpriv.h, fileio.c): modified the
    symlink code to use the opened outfile handle for re-reading the symlink
    target data; modified open_outfile to allow read access on outfile handle
    (security fix against "ToCToU" vulnerability) [Chr. Spieler]
 - UNIX (unix.c, Makefile, configure): fixed "ToCToU" security vulnerability
    in close_outfile by using fchown() & fchmod() instead of chown() & chmod()
    (only when available); added check for function existence to configure
    [Dan Yefimov, Matthias Scheler, Chr. Spieler]
 - fileio.c - open_outfile(): deny access for group&world to currently open
    outfile on all systems that support umask() (AOS/VS, Atari, AtheOS, BeOS,
    QDOS, Tandem, UNIX) [Chr. Spieler]
 - unzpriv.h, fileio.c - open_outfile(): open outfile in "write update" mode
    when supporting symlinks or QLZIP extensions; these features require the
    ability to reread the opened outfile [Chr. Spieler]
 - fileio.c: added WriteTxtErr() macro to allow differenciating between
    text-mode write function calls (in UzpMessagePrnt()) and binary write calls
    (everywhere else) [Chr. Spieler]
 - fileio.c, VMS only: use fprintf() instead of (f)write in WriteTxtErr(), to
    work around RMS record handling problem (e.g. when using PIPE to redirect
    messages) [Steven M. Schweda]
 - UNIX port: revised unix/configure and unix/Makefile for better integration
    of automatic configuration in the build procedure [Chr. Spieler]

6.00c14 (15 Nov 05):
 - VMS, descrip.mms: repaired CLEAN_ALL target which did not always delete
    all expected files  [Steven M. Schweda]
 - unzip.c, fixes for online help screen: corrected "-v" description and moved
    it from modifier section into options section, added description of "-T"
    option, removed the "DLL && API_DOC"-only description of the "-A extended
    API help" option [Chr. Spieler, Steven M. Schweda]
 - man/unzip.1: minor corrections in wording of "-v" option description
    [Chr. Spieler, Steven M. Schweda]

6.00c15 (17 Nov 05):
 - vms/vms.c: fixed do_wild() logic error introduced in August 2005,
    sys$search fails (at least on VAX) when not preceeded by a sys$parse
    call with "syntax-check-only" flag cleared [Steven M. Schweda]
 - process.c: cosmetic change in process_zipfiles() to shut-up gcc warning
    on non-UNIX (non-QDOS) systems [Chr. Spieler]

6.00c (19 Nov 05):
 - extract.c, bzip2 support: fixed missing ";" error (was only a problem
    when enabling BZIP2 support without LARGE_FILE support); added some
    (cosmetic) typecasts to shut up compiler warnings [Steven M. Schweda]
 - VMS support for BZIP2 decompression: updated make procedures and scripts,
    added "find_bzip2_dir" helper script and bzlib.h include file wrapper
    [Steven M. Schweda]

6.00d01 (04 Mar 07):
 - extract.c: replaced local wsize variable (DLL only) by reference to the
    "global" variable G._wsize [Chr. Spieler]
 - unzpriv.h: use fputs() instead of fprintf() as output function in the
    FUNZIP variant of the Info() macro, to prevent misinterpreting format
    specifiers in the sprintf() output. [Martin Pitt, ubuntu]
 - unix/unix.c: added detailed compiler version info for SunPro cc, HP cc,
    DEC cc. [Steven M. Schweda]
 - vms/descrip.mms: added support for architecture detection macro symbols
    built into newer versions of MMK (a MMS clone).  [Steven M. Schweda]
 - fileio.c - is_vms_varlen_txt(): commented out the currently unused code for
    determining the VMS fileorg setting. [Steven M. Schweda]
 - extract.c - extract_or_test_files(): the "back at endsig" checking code
    is not used for the SFX stub. [Steven M. Schweda]
 - win32: changed all Win32-API calls with string parameters to explicitely use
    the ANSI variant; this removes the dependency on the UNICODE and _UNICODE
    compile flags being undefined.  [NN, Chr. Spieler]
 - zipinfo.c: on WIN32, archive filename display must be fed through codepage
    translation. [Chr. Spieler]
 - zipinfo.c - zipinfo(): repaired several memory leaks when the listing loop
    is stopped prematurely because of inner errors. [Chr. Spieler]
 - crc32.c, crc32.h, crc_i386.S, crc_i386.asm, crc_i386.c: comprehensive
    revision of crc32 calculation, implementing the optimized algorithms from
    the zlib source code which depend on specific machine architecture
    characteristics (removed crctab.c, added crc32.h).  [Chr. Spieler]
 - crypt.c, crypt.h: adapted to the modifications of crc32.  [Chr. Spieler]
 - msdos, win32, vms, unix: enabled optimized crc32 algorithms on i386, VAX,
    and AXP architectures.  [Chr. Spieler]
 - win32/nt.c: tried to fix mutex handle leak in Initialize().
    [Johnny Lee, Chr. Spieler]
 - vms/vms.c - check_format(): added system error message to sys$open failure
    message. [Steven M. Schweda]
 - wince/intrface.cpp - checkdir(): corrected typo ('0' should be '\0')
    [Shawn Carey]
 - wince/wcemain.c - WinMain(): correct the removal code for enclosing argument
    quotes. [Shawn Carey, Chr. Spieler]
 - os2, win32 - checkdir(): fixed buffer overflow security bug for FAT-style
    buildpath, optimized code by removing overflow checks inside the copy loops
    [Johnny Lee, Chr. Spieler]
 - win32/win32.c - VFatFileTime2utime(): fixed return data generation in error
    branch for the "input time stamp cannot be converted to local time" case
    [Steve Youngs]
 - added new compression methods and e.f. IDs from PKWARE Appnote 6.3.0 as of
    2006-09-29  [Chr. Spieler]
 - extract.c - extract_or_test_files(): remove dead branch in the code section
    handling archive test summary messages.  [Chr. Spieler]
 - fileio.c - zstrnicmp(): added (uch) typecasts to comparison, to improve
    "compatibility" with "extended ASCII characters".  [Chr. Spieler]
 - vms: use CRTL-supplied function strncasecmp() for STRNICMP() when available.
    